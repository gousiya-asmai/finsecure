"""
Django settings for backend project.

Generated by 'django-admin startproject' using Django 5.2.4.
"""

from pathlib import Path
import os

# Allow OAuth to work without HTTPS in dev
os.environ['OAUTHLIB_INSECURE_TRANSPORT'] = '1'

# ---------------- Base Paths ----------------
BASE_DIR = Path(__file__).resolve().parent.parent

# ---------------- Security ----------------
SECRET_KEY = 'django-insecure-d#))1-1g82x32&5%w$kq=*e+ih!%krq5_kiocs8pf@q6d#3v34'
DEBUG = os.getenv("DEBUG", "False") == "True"
ALLOWED_HOSTS = ["localhost", "127.0.0.1", "finsecure-jgzx.onrender.com"]

   # In production: ["yourdomain.com"]

# ---------------- Installed Apps ----------------
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    # Custom apps
    "users.apps.UsersConfig",
    'assistance',
    'fraud',
    'emails',
    'transactions',
]

# ---------------- Middleware ----------------
MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

# ---------------- URLs & Templates ----------------
ROOT_URLCONF = 'backend.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / "templates"],   # global templates folder
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'backend.wsgi.application'

# ---------------- Database ----------------
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}

# ---------------- Password Validation ----------------
AUTH_PASSWORD_VALIDATORS = [
    {'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator'},
    {'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator'},
    {'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator'},
    {'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator'},
]

# ---------------- Internationalization ----------------
LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'UTC'
USE_I18N = True
USE_TZ = True

# ---------------- Static Files ----------------
STATIC_URL = '/static/'
STATICFILES_DIRS = [BASE_DIR / "static"]  # app-level static
STATIC_ROOT = BASE_DIR / "staticfiles"    # collected static (prod)

# ---------------- Media Files (Profile Photos etc.) ----------------
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# ---------------- Authentication Redirects ----------------
LOGIN_URL = '/users/login/'
LOGIN_REDIRECT_URL = '/users/dashboard/'
LOGOUT_REDIRECT_URL = '/users/login/'

# ---------------- Default Auto Field ----------------
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# ---------------- Email Configuration ----------------
# Production: sends real emails via Gmail SMTP
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.sendgrid.net'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = 'apikey'   # literally this string
EMAIL_HOST_PASSWORD = os.getenv('SENDGRID_API_KEY')
 # you'll set this in Render environment
DEFAULT_FROM_EMAIL = 'finsecure7@gmail.com'
# Development alternative: print emails to console instead of sending
# EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'
