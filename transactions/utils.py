from django.core.mail import send_mail
from django.conf import settings
import threading
import logging

logger = logging.getLogger(__name__)

def send_fraud_alert_email(user_email, transaction_info, user_name=None):
    """
    Send fraud alert email asynchronously to prevent blocking
    
    Args:
        user_email (str): Recipient email address
        transaction_info (str): Formatted transaction details
        user_name (str, optional): User's name for personalization
    """
    def _send_email():
        try:
            subject = '🚨 URGENT: Fraud Alert on Your Account - FinSecure'
            
            # Format the message
            message = f"""
Dear {user_name or 'Customer'},

⚠️ FRAUD ALERT - IMMEDIATE ATTENTION REQUIRED ⚠️

We have detected a suspicious transaction on your FinSecure account:

═══════════════════════════════════════════════════
{transaction_info}
═══════════════════════════════════════════════════

🔒 WHAT YOU SHOULD DO NOW:

1. ✅ If you recognize this transaction - No action needed
2. ❌ If you DO NOT recognize this transaction:
   • Log in to your FinSecure account immediately
   • Review the transaction details
   • Report it as fraudulent
   • Contact your bank to block your card

═══════════════════════════════════════════════════

This alert was generated by our AI-powered fraud detection system.

For assistance, visit: https://finsecure-jgzx.onrender.com/assistance/dashboard/

Stay Safe,
FinSecure Security Team

---
This is an automated security alert. Please do not reply directly.
            """
            
            from_email = settings.DEFAULT_FROM_EMAIL
            recipient_list = [user_email]
            
            logger.info(f"📧 Attempting to send fraud alert to {user_email}")
            
            # Send the email
            result = send_mail(
                subject=subject,
                message=message,
                from_email=from_email,
                recipient_list=recipient_list,
                fail_silently=False,
            )
            
            if result == 1:
                logger.info(f"✅ Fraud alert email sent successfully to {user_email}")
            else:
                logger.warning(f"⚠️ Email send returned {result} for {user_email}")
                
        except Exception as e:
            logger.error(f"❌ Fraud email failed for {user_email}: {str(e)}", exc_info=True)
    
    # Send email in background thread
    email_thread = threading.Thread(target=_send_email)
    email_thread.daemon = True
    email_thread.start()
    
    logger.info(f"🚀 Fraud email thread started for {user_email}")
